// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrueCodeTestProj;

#nullable disable

namespace TrueCodeProj.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrueCodeTestProj.Tag", b =>
                {
                    b.Property<Guid>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagId = new Guid("676ede86-26d3-4a36-bc98-549fc0812820"),
                            Domain = "example.com",
                            Value = "Tag1"
                        },
                        new
                        {
                            TagId = new Guid("dbad0d84-52d7-4fe2-95dd-efd93603e99f"),
                            Domain = "example.com",
                            Value = "Tag2"
                        },
                        new
                        {
                            TagId = new Guid("21b16e09-3168-4cc0-a4a8-4c5f831c8969"),
                            Domain = "example1.com",
                            Value = "Tag3"
                        },
                        new
                        {
                            TagId = new Guid("d37c0e93-18ab-47d8-8fdc-51ba77bb9f9b"),
                            Domain = "example2.com",
                            Value = "Tag4"
                        });
                });

            modelBuilder.Entity("TrueCodeTestProj.TagToUser", b =>
                {
                    b.Property<Guid>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId");

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.ToTable("TagToUsers");

                    b.HasData(
                        new
                        {
                            EntityId = new Guid("3e2edb24-5250-4dcd-966a-62e75e79c676"),
                            TagId = new Guid("676ede86-26d3-4a36-bc98-549fc0812820"),
                            UserId = new Guid("67ed6e86-26d3-4a36-bc98-549fc0812829")
                        });
                });

            modelBuilder.Entity("TrueCodeTestProj.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("67ed6e86-26d3-4a36-bc98-549fc0812829"),
                            Domain = "example.com",
                            Name = "Test User 1"
                        },
                        new
                        {
                            UserId = new Guid("dbbcf8df-8879-459d-853e-060bf4d4b05b"),
                            Domain = "example.com",
                            Name = "Test User 2"
                        },
                        new
                        {
                            UserId = new Guid("70594673-8609-450e-be8b-372948684ad8"),
                            Domain = "example.com",
                            Name = "Test User 3"
                        },
                        new
                        {
                            UserId = new Guid("1b5e587f-f0ee-44b0-9dc7-fcdc772e8504"),
                            Domain = "example.com",
                            Name = "Test User 4"
                        },
                        new
                        {
                            UserId = new Guid("d65c4e28-481b-41cf-8c2e-21fcddfba2f6"),
                            Domain = "example.com",
                            Name = "Test User 5"
                        },
                        new
                        {
                            UserId = new Guid("4c34425f-a176-4388-b822-7f97e449a7b1"),
                            Domain = "example.com",
                            Name = "Test User 6"
                        },
                        new
                        {
                            UserId = new Guid("a4feaf10-5e1e-4f6c-a4d1-0493b86558b4"),
                            Domain = "example.com",
                            Name = "Test User 7"
                        },
                        new
                        {
                            UserId = new Guid("5c7f39ff-f38a-45f6-9357-774277d31215"),
                            Domain = "example.com",
                            Name = "Test User 8"
                        },
                        new
                        {
                            UserId = new Guid("0c349c34-640b-40d7-a282-726cfa65f070"),
                            Domain = "example.com",
                            Name = "Test User 9"
                        },
                        new
                        {
                            UserId = new Guid("7d356887-46d0-446b-b875-a0cd7b629f07"),
                            Domain = "example.com",
                            Name = "Test User 10"
                        },
                        new
                        {
                            UserId = new Guid("27f70a0d-9eda-4522-acef-b783bf085321"),
                            Domain = "example.com",
                            Name = "Test User 11"
                        },
                        new
                        {
                            UserId = new Guid("6f5a467b-406b-4066-a037-ebe2f98d709d"),
                            Domain = "example.com",
                            Name = "Test User 12"
                        },
                        new
                        {
                            UserId = new Guid("779f9dd6-6bd8-45de-9405-1a8350f4dc35"),
                            Domain = "example.com",
                            Name = "Test User 13"
                        });
                });

            modelBuilder.Entity("TrueCodeTestProj.TagToUser", b =>
                {
                    b.HasOne("TrueCodeTestProj.Tag", "Tag")
                        .WithMany("TagToUsers")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrueCodeTestProj.User", "User")
                        .WithMany("TagToUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrueCodeTestProj.Tag", b =>
                {
                    b.Navigation("TagToUsers");
                });

            modelBuilder.Entity("TrueCodeTestProj.User", b =>
                {
                    b.Navigation("TagToUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
